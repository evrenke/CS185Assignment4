  679  rm PRODUCTS/0060193395.LATEST.txt
  680  script ws6.txt
  681   PRODUCTS/0060193395.LATEST.txt
  682  script ws6.txt
  683  ls -ln PRODUCTS
  684  ln -la PRODUCTS
  685  l -la PRODUCTS
  686  crontab -l
  687  cd
  688  nano 0060193395.txt
  689  now=$(date)
  690  echo date
  691  echo 'date'
  692  echo "date"
  693  now=$(date)
  694  cp PRODUCTS/0060193395.txt "PRODUCTS/0060193395.${now}.txt"
  695  touch cronfile
  696  echo "* * * * * awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt >PRODUCTS/0060193395.AVGRATING.txt 2>&1" > cronfile
  697  crontab cronfile
  698  crontab -l
  699  nano PRODUCTS/0060193395.AVGRATING.txt
  700  now=$(date)
  701  echo "3 2" >> "PRODUCTS/0060193395.$now.txt"
  702  now=$(date)
  703  cd PRODUCTS
  704  ln -s "0060193395.$now.txt" 0060193395.LATEST.txt
  705  cd
  706  touch cronfile
  707  echo "* * * * * awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1" > cronfile
  708  crontab cronfile
  709  crontab -l
  710  nano PRODUCTS/0060193395.AVGRATING.txt
  711  now=$(date)
  712  cp PRODUCTS/0060193395.txt "PRODUCTS/0060193395.${now}.txt"
  713  echo "3 2" >> "PRODUCTS/0060193395.$now.txt"
  714  cd PRODUCTS;
  715  ln -s "0060193395.$now.txt" 0060193395.LATEST.txt; cd
  716  now=$(date)
  717  cp PRODUCTS/0060193395.txt "PRODUCTS/0060193395.${now}.txt"
  718  echo "3 2" >> "PRODUCTS/0060193395.$now.txt"
  719  cd PRODUCTS;
  720  ln -s "0060193395.$now.txt" 0060193395.LATEST.txt; cd
  721  touch cronfile
  722  echo "* * * * * awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1" > cronfile
  723  crontab cronfile
  724  crontab -l
  725  nano PRODUCTS/0060193395.AVGRATING.txt
  726  history > cmds.log
  727  script ws6.txt
  728  nano PRODUCTS/0060193395.txt
  729  script ws6.txt
  730  echo now
  731  echo 'now'
  732  echo $now
  733  echo $'now'
  734  echo $now
  735  now=$date
  736  echo 'now'
  737  echo$now
  738  echo $now
  739  echo $date
  740  printvar
  741  echo "$now"
  742  now=$(date)
  743  echo "$now"
  744  cp PRODUCTS/0060193395.txt "PRODUCTS/0060193395.$date.txt"
  745  ls PRODUCTS
  746  cp PRODUCTS/0060193395.txt PRODUCTS/0060193395."$date".txt
  747  ls PRODUCTS
  748  cp PRODUCTS/0060193395.txt PRODUCTS/"0060193395.$date.txt"
  749  ls PRODUCTS
  750  cp PRODUCTS/0060193395.txt PRODUCTS/0060193395.${date}.txt
  751  ls PRODUCTS
  752  echo "${now}"
  753  ls PRODUCTS
  754  cp PRODUCTS/0060193395.txt PRODUCTS/0060193395.${now}.txt
  755  cp PRODUCTS/0060193395.txt 'PRODUCTS/0060193395.${now}.txt'
  756  cp PRODUCTS/0060193395.txt PRODUCTS/0060193395.${now}.txt
  757  ls PRODUCTS
  758  nano "PRODUCTS/0060193395.Fri Oct 15 04:33:01 UTC 2021.txt"
  759  rm "PRODUCTS/0060193395.Fri Oct 15 04:33:01 UTC 2021.txt"
  760  rm PRODUCTS/0060193395.AVGRATING.txt
  761  rm PRODUCTS/0060193395..txt
  762  rm 'PRODUCTS/0060193395.${now}.txt'
  763  ls PRODUCTS
  764  script ws6.txt
  765  ls PRODUCTS
  766  nano PRODUCTS/0060193395.AVGRATING.txt 
  767  nano PRODUCTS/0060193395.LATEST.txt 
  768  nano cronfile
  769  script ws6.txt
  770  nano PRODUCTS/0060193395.AVGRATING.txt 
  771  nano PRODUCTS/0060193395.LATEST.txt 
  772  nano PRODUCTS/0060193395.LATEST.txt\
  773  ls PRODUCTS
  774  ln -l PRODUCTS/0060193395.LATEST.txt
  775  ls -l PRODUCTS/0060193395.LATEST.txt
  776  crontab -l
  777  nano PRODUCTS/0060193395.AVGRATING.txt
  778  nano `PRODUCTS/0060193395.LATEST.txt'
  779  nano PRODUCTS/0060193395.AVGRATING.txt
  780  echo "* * * * * awk \'{sum += \$1} END { if (NR > 0) print sum / NR }\' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1" > cronfile
  781  crontab -l
  782  crontab cronfile
  783  crontab -l
  784  nano PRODUCTS/0060193395.AVGRATING.txt
  785  crontab -l
  786  nano PRODUCTS/0060193395.AVGRATING.txt
  787  nano cronfile
  788  echo "* * * * * \"awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1\"" > cronfile
  789  crontab -e
  790  echo "* * * * * \"awk '{sum += \$1} END { if (NR > 0) print sum / NR }' PRODUCTS/0060193395.LATEST.txt > PRODUCTS/0060193395.AVGRATING.txt 2>&1\"" > cronfile
  791  crontab cronfile
  792  nano PRODUCTS/0060193395.AVGRATING.txt
  793  nano cronfile
  794  nano PRODUCTS/0060193395.AVGRATING.txt
  795  nano PRODUCTS/0060193395.LATEST.txt
  796  ls PRODUCTS
  797  nano PRODUCTS/0060193395.LATEST.txt
  798  nano PRODUCTS/0060193395.AVGRATING.txt
  799  crontab -e
  800  crontab cronfile
  801  nano PRODUCTS/0060193395.AVGRATING.txt
  802  ln -s "0060193395.$now.txt" PRODUCTS/0060193395.LATEST.txt
  803  rm PRODUCTS/0060193395.LATEST.txt
  804  ln -s "0060193395.$now.txt" PRODUCTS/0060193395.LATEST.txt
  805  nano PRODUCTS/0060193395.AVGRATING.txt
  806  nano PRODUCTS/0060193395.LATEST.txt
  807  nano PRODUCTS/0060193395.AVGRATING.txt
  808  ls -ln PRODUCTS
  809  rm PRODUCTS/0060193395.LATEST.txt
  810  script ws6.txt
  811  history > cmds.log
  812  git add cmds.log ws6.txt
  813  nano cmds.log
  814  script ws6.txt
  815  rm PRODUCTS/0060193395.LATEST.txt
  816  script ws6.txt
  817  nano cmds.log
  818  git add cmds.log ws6.txt
  819  nano cmds.log
  820  git add cmds.log
  821  git commit -m "Commtting worksheet 6 console output and command log"
  822  git remote seturl https://github.com/evrenke/CS185Worksheet6.git
  823  git remote set-url https://github.com/evrenke/CS185Worksheet6.git
  824  git remote set-url origin https://github.com/evrenke/CS185Worksheet6.git
  825  git push -u origin main
  826  git init
  827  git add cmds.log ws6.txt
  828  git commit -m "Commtting worksheet 6 console output an
  829  git remote set-url origin https://github.com/evrenke/CS185Worksheet6.git
  830  git push -u origin main
  831  git add
  832  nano ws6.txt
  833  ls
  834  git add ws6.txt cmds.log
  835  git add
  836  git commit -m "Commtting worksheet 6 console output and command log"
  837  git push -u origin main
  838  git remote add origin https://github.com/evrenke/CS185Worksheet6.git
  839  git remote set-url origin https://github.com/evrenke/CS185Worksheet6.git
  840  git push -u origin master
  841  exit
  842  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 | sed '/,/d ;  /./d /;/d /and/d /or/d /if/d /in/d /it/d' | sed -e 's/<[^>]*>//g' > "PRODUCTS/REVIEWS.0060193395.txt";
  843  ls PRODUCTS
  844  nano PRODUCTS/REVIEWS.0060193395.txt
  845  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 > "PRODUCTS/REVIEWS.0060193395.txt"
  846  crontab -l
  847  crontab -e
  848  nano PRODUCTS/REVIEWS.0060193395.txt
  849  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  850  nano PRODUCTS/REVIEWS.0060193395.txt
  851  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  852  ls
  853  nano amazon_reviews_us_Books_v1_02.tsv
  854  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  855  nano PRODUCTS/REVIEWS.0060193395.txt
  856  ls PRODUCTS
  857  awk '$4==0060193395' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  858  nano PRODUCTS/REVIEWS.0060193395.txt
  859  awk '{ if ($14 == 0060193395) { print } }' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  860  nano PRODUCTS/REVIEWS.0060193395.txt
  861  awk '{ if ($4 == 0060193395) { print } }' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  862  nano PRODUCTS/REVIEWS.0060193395.txt
  863  awk '{ if ($4 == 0060193395) { print } }' amazon_reviews_us_Books_v1_02.tsv
  864  awk '$4 == 0060193395' amazon_reviews_us_Books_v1_02.tsv
  865  nano amazon_reviews_us_Books_v1_02.tsv
  866  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/REVIEWS.0060193395.txt"
  867  nano amazon_reviews_us_Books_v1_02.tsv
  868  nano PRODUCTS/REVIEWS.0060193395.txt
  869  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 > "PRODUCTS/REVIEWS.0060193395.txt"
  870  nano PRODUCTS/REVIEWS.0060193395.txt
  871  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed '/,/d ;  /./d /;/d /and/d /or/d /if/d /in/d /it/d' > "PRODUCTS/REVIEWS.0060193395.txt"
  872  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' > "PRODUCTS/REVIEWS.0060193395.txt" 
  873  nano PRODUCTS/REVIEWS.0060193395.txt
  874  history > cmds.log
  875  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed '/,/d /;/d  /./d /;/d /and/d /or/d /if/d /in/d /it/d'> "PRODUCTS/REVIEWS.0060193395.txt"
  876  nano PRODUCTS/REVIEWS.0060193395.txt
  877  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed '/,/d '> "PRODUCTS/REVIEWS.0060193395.txt"
  878  nano PRODUCTS/REVIEWS.0060193395.txt
  879  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 > "PRODUCTS/REVIEWS.0060193395.txt"
  880  nano PRODUCTS/REVIEWS.0060193395.txt
  881  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/\,//;s/\.//;s/\;//s/and//;s/or//;s/if//;s/in//;s/it//'> "PRODUCTS/REVIEWS.0060193395.txt"
  882  nano PRODUCTS/REVIEWS.0060193395.txt
  883  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/\,//' > "PRODUCTS/REVIEWS.0060193395.txt"
  884  nano PRODUCTS/REVIEWS.0060193395.txt
  885  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//' > "PRODUCTS/REVIEWS.0060193395.txt"
  886  nano PRODUCTS/REVIEWS.0060193395.txt
  887  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/\,//' > "PRODUCTS/REVIEWS.0060193395.txt"
  888  nano PRODUCTS/REVIEWS.0060193395.txt
  889  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g' > "PRODUCTS/REVIEWS.0060193395.txt"
  890  nano PRODUCTS/REVIEWS.0060193395.txt
  891  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g;s/.//g' > "PRODUCTS/REVIEWS.0060193395.txt"
  892  nano PRODUCTS/REVIEWS.0060193395.txt
  893  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g;s/\.//g' > "PRODUCTS/REVIEWS.0060193395.txt"
  894  nano PRODUCTS/REVIEWS.0060193395.txt
  895  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g;s/\.//g;s/\;//g;s/and//g;s/or//g;s/if//g;s/in//g;s/it//g'> "PRODUCTS/REVIEWS.0060193395.txt"
  896  nano PRODUCTS/REVIEWS.0060193395.txt
  897  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g;s/\.//g;s/\;//g;s/" and "//g;s/" or "//g;s/" if "//g;s/" in "//g;s/" it "//g'> "PRODUCTS/REVIEWS.0060193395.txt"
  898  nano PRODUCTS/REVIEWS.0060193395.txt
  899  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14  | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'> "PRODUCTS/REVIEWS.0060193395.txt"
  900  nano PRODUCTS/REVIEWS.0060193395.txt
  901  awk -v "ID=0060193395" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' > "PRODUCTS/REVIEWS.0060193395.txt" 
  902  nano PRODUCTS/REVIEWS.0060193395.txt
  903  script ws7.txt
  904  git init
  905  git add cmds.log ws7.txt
  906  git commit -m "Committing worksheet 7 console output and command log"
  907  git remote add origin https://github.com/evrenke/CS185Worksheet7.git
  908  git remote set-url origin https://github.com/evrenke/CS185Worksheet7.git
  909  git push -u origin master
  910  ls
  911  touch customerIDs.txt
  912  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 1000 > customerIDs.txt
  913  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  914  touch customerIDs.txt
  915  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
  916  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  917  input="customerIDs.txt"; while read -r line; do awk ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  918  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
  919  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  920  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  921  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$line.txt" > "CUSTOMERS/$line.BINARY.txt"; done < "$input"
  922  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$1.txt" > "CUSTOMERS/$1.BINARY.txt"; done < "$input"
  923  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  924  input="customerMedians.txt"; while read -r line id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$line.txt" > "CUSTOMERS/$line.BINARY.txt"; done < "$input"
  925  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +$line; else print a[x-1] +'\t' + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  926  input="customerMedians.txt"; while read -r line id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$line.txt" > "CUSTOMERS/$line.BINARY.txt"; done < "$input"
  927  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +line; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  928  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  929  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +line; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  930  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  931  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" > customerMedians.txt; done < "$input"
  932  input="customerMedians.txt"; while read -r median id; do awk '{ if ($10!=0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  933  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 1
  934  script a3.txt
  935  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
  936  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  937  input="customerIDs.txt"; while read -r line; do awk ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  938  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' < "$input"
  939  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt" < "$input"
  940  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
  941  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
  942  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  943  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  944  script a3.txt
  945  ls
  946  nano customerMedians.txt
  947  rm customerMedians.txt\
  948  rm customerMedians.txt
  949  rm c.txt
  950  nano A.txt
  951  script a3.txt
  952  ls CUSTOMERS
  953  rm -r CUSTOMERS
  954  mkdir CUSTOMERS
  955  touch customerIDs.txt
  956  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
  957  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  958  input="customerIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
  959  script a3.txt
  960  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  961  nano customerMedians.txt
  962  script a3.txt
  963  nano customerMedians.txt
  964  rm customerMedians.txt
  965  script a3.txt
  966  nano customerMedians.txt
  967  rm customerMedians.txt
  968  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +line; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
  969  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
  970  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
  971  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 "\t" line; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
  972  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", line; else print a[x-1], "\t", 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
  973  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "$line"; else print a[x-1], "\t", "$line"; }' "CUSTOMERS/$line.txt"; done < "$input"
  974  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "line"; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
  975  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
  976  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
  977  input="customerMedians.txt"; while read -r median id; do awk '{ if ($10!=0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  978  ls
  979  script a3.txt
  980  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  981  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
  982  ls
  983  ls CUSTOMERS
  984  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
  985  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt"; done < "$input"
  986  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8 + " " + $9 + " " + $10; }' "CUSTOMERS/$id.txt"; done < "$input"
  987  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10; }' "CUSTOMERS/$id.txt"; done < "$input"
  988  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median'; }' "CUSTOMERS/$id.txt"; done < "$input"
  989  nano customerMedians.txt
  990  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" > customerMedians.txt; done < "$input"
  991  nano customerMedians.txt
  992  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
  993  nano customerMedians.txt
  994  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
  995  ls CUSTOMERS
  996  rm -r CUSTOMERS/?.??????.BINARY.txt
  997  ls CUSTOMERS
  998  rm -r CUSTOMERS/?.?????.BINARY.txt
  999  rm -r CUSTOMERS/?.????.BINARY.txt
 1000  rm -r CUSTOMERS/?.???.BINARY.txt
 1001  rm -r CUSTOMERS/?.??.BINARY.txt
 1002  rm -r CUSTOMERS/?.\?.BINARY.txt
 1003  rm -r CUSTOMERS/?.?.BINARY.txt
 1004  rm -r CUSTOMERS/?.BINARY.txt
 1005  ls CUSTOMERS
 1006  nano CUSTOMERS/49447323.BINARY.txt
 1007  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1008  nano CUSTOMERS/49447323.BINARY.txt
 1009  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';else print $8, " ", $9, " ", $10, " ",0, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1010  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1011  ls
 1012  nano customerMedians.txt
 1013  ls CUSTOMERS
 1014  nano CUSTOMERS/49447323.txt
 1015  awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/49447323.txt"
 1016  awk -F"\t" '{ if ($10 != 0) print $8, " ", $9, " ", $10, " ",$9/$10;}' "CUSTOMERS/49447323.txt"
 1017  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1018  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1019  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1020  nano customerMedians.txt
 1021  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print median," ", id;}'; done < "$input"
 1022  input="customerMedians.txt"; while read -r median id; do awk '{ print median," ", id;}'; done < "$input"
 1023  input="customerMedians.txt"; while read median id; do awk '{ print median," ", id;}'; done < "$input"
 1024  input="customerMedians.txt"; while read median id; do echo "$median  $id"; done < "$input"
 1025  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median," ", $id;}'; done < "$input"
 1026  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1027  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", $id, " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1028  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1029  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1030  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1031  ls
 1032  nano customerMedians.txt
 1033  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print "$median", "$id";}'; done < "$input"
 1034  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1035  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', $id;}'; done < "$input"
 1036  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1037  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1038  input="customerMedians.txt"; while read median id; do echo "$median   $id"; done < "$input"
 1039  input="customerMedians.txt"; while read median id; do awk -F"\t" -v '{ print median, 'id';}'; done < "$input"
 1040  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, 'id';}'; done < "$input"
 1041  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, id;}'; done < "$input"
 1042  ls
 1043  nano customerMedians.txt
 1044  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1045  printvar
 1046  printenv
 1047  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median}'; done < "$input"
 1048  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1049  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1050  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1051  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN = $median" "ID = $id" '{ print MEDIAN, ID;}'; done < "$input"
 1052  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print MEDIAN, ID;}'; done < "$input"
 1053  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print $8, " ", $9, " ", $10, " ", ID, " ", MEDIAN;}' "CUSTOMERS/ID.txt"; done < "$input"
 1054  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/ID.txt"; done < "$input"
 1055  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1056  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1057  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1058  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1059  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,$median; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1060  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,'$median'; if (($10 != 0) && (($9 / $10) >= '$median')) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1061  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1062  ls CUSTOMERS
 1063  nano CUSTOMERS/49447323.BINARY.txt
 1064  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1065  nano CUSTOMERS/53084107.BINARY.txt
 1066  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 | sed 's/$/ $FILE/' <  "$FILE" ; done
 1067  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1068  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ $FILE/'; done
 1069  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ "$FILE"/'; done
 1070  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s/\$/ $FILE/"; done
 1071  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's|$|$FILE|g'; done
 1072  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done
 1073  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -n; done
 1074  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -kn 1; done
 1075  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k 1nr; done
 1076  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k -g 1nr; done
 1077  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1nr; done
 1078  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1nr; done
 1079  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1,1 nr; done
 1080  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 1
 1081  script a3.txt
 1082  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
 1083  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1084  input="customerIDs.txt"; while read -r line; do awk ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1085  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' < "$input"
 1086  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt" < "$input"
 1087  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
 1088  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
 1089  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1090  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1091  script a3.txt
 1092  ls
 1093  nano customerMedians.txt
 1094  rm customerMedians.txt\
 1095  rm customerMedians.txt
 1096  rm c.txt
 1097  nano A.txt
 1098  script a3.txt
 1099  ls CUSTOMERS
 1100  rm -r CUSTOMERS
 1101  mkdir CUSTOMERS
 1102  touch customerIDs.txt
 1103  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
 1104  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1105  input="customerIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1106  script a3.txt
 1107  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1108  nano customerMedians.txt
 1109  script a3.txt
 1110  nano customerMedians.txt
 1111  rm customerMedians.txt
 1112  script a3.txt
 1113  nano customerMedians.txt
 1114  rm customerMedians.txt
 1115  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +line; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
 1116  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
 1117  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1118  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 "\t" line; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1119  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", line; else print a[x-1], "\t", 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1120  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "$line"; else print a[x-1], "\t", "$line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1121  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "line"; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1122  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1123  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1124  input="customerMedians.txt"; while read -r median id; do awk '{ if ($10!=0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1125  ls
 1126  script a3.txt
 1127  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1128  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1129  ls
 1130  ls CUSTOMERS
 1131  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1132  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt"; done < "$input"
 1133  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8 + " " + $9 + " " + $10; }' "CUSTOMERS/$id.txt"; done < "$input"
 1134  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10; }' "CUSTOMERS/$id.txt"; done < "$input"
 1135  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median'; }' "CUSTOMERS/$id.txt"; done < "$input"
 1136  nano customerMedians.txt
 1137  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" > customerMedians.txt; done < "$input"
 1138  nano customerMedians.txt
 1139  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1140  nano customerMedians.txt
 1141  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1142  ls CUSTOMERS
 1143  rm -r CUSTOMERS/?.??????.BINARY.txt
 1144  ls CUSTOMERS
 1145  rm -r CUSTOMERS/?.?????.BINARY.txt
 1146  rm -r CUSTOMERS/?.????.BINARY.txt
 1147  rm -r CUSTOMERS/?.???.BINARY.txt
 1148  rm -r CUSTOMERS/?.??.BINARY.txt
 1149  rm -r CUSTOMERS/?.\?.BINARY.txt
 1150  rm -r CUSTOMERS/?.?.BINARY.txt
 1151  rm -r CUSTOMERS/?.BINARY.txt
 1152  ls CUSTOMERS
 1153  nano CUSTOMERS/49447323.BINARY.txt
 1154  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1155  nano CUSTOMERS/49447323.BINARY.txt
 1156  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';else print $8, " ", $9, " ", $10, " ",0, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1157  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1158  ls
 1159  nano customerMedians.txt
 1160  ls CUSTOMERS
 1161  nano CUSTOMERS/49447323.txt
 1162  awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/49447323.txt"
 1163  awk -F"\t" '{ if ($10 != 0) print $8, " ", $9, " ", $10, " ",$9/$10;}' "CUSTOMERS/49447323.txt"
 1164  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1165  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1166  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1167  nano customerMedians.txt
 1168  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print median," ", id;}'; done < "$input"
 1169  input="customerMedians.txt"; while read -r median id; do awk '{ print median," ", id;}'; done < "$input"
 1170  input="customerMedians.txt"; while read median id; do awk '{ print median," ", id;}'; done < "$input"
 1171  input="customerMedians.txt"; while read median id; do echo "$median  $id"; done < "$input"
 1172  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median," ", $id;}'; done < "$input"
 1173  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1174  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", $id, " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1175  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1176  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1177  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1178  ls
 1179  nano customerMedians.txt
 1180  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print "$median", "$id";}'; done < "$input"
 1181  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1182  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', $id;}'; done < "$input"
 1183  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1184  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1185  input="customerMedians.txt"; while read median id; do echo "$median   $id"; done < "$input"
 1186  input="customerMedians.txt"; while read median id; do awk -F"\t" -v '{ print median, 'id';}'; done < "$input"
 1187  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, 'id';}'; done < "$input"
 1188  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, id;}'; done < "$input"
 1189  ls
 1190  nano customerMedians.txt
 1191  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1192  printvar
 1193  printenv
 1194  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median}'; done < "$input"
 1195  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1196  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1197  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1198  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN = $median" "ID = $id" '{ print MEDIAN, ID;}'; done < "$input"
 1199  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print MEDIAN, ID;}'; done < "$input"
 1200  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print $8, " ", $9, " ", $10, " ", ID, " ", MEDIAN;}' "CUSTOMERS/ID.txt"; done < "$input"
 1201  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/ID.txt"; done < "$input"
 1202  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1203  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1204  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1205  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1206  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,$median; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1207  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,'$median'; if (($10 != 0) && (($9 / $10) >= '$median')) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1208  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1209  ls CUSTOMERS
 1210  nano CUSTOMERS/49447323.BINARY.txt
 1211  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1212  nano CUSTOMERS/53084107.BINARY.txt
 1213  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 | sed 's/$/ $FILE/' <  "$FILE" ; done
 1214  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1215  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ $FILE/'; done
 1216  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ "$FILE"/'; done
 1217  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s/\$/ $FILE/"; done
 1218  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's|$|$FILE|g'; done
 1219  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done
 1220  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -n; done
 1221  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -kn 1; done
 1222  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k 1nr; done
 1223  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k -g 1nr; done
 1224  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1nr; done
 1225  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1nr; done
 1226  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1,1 nr; done
 1227  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1,1nr; done
 1228  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 1
 1229  script a3.txt
 1230  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
 1231  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1232  input="customerIDs.txt"; while read -r line; do awk ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1233  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' < "$input"
 1234  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt" < "$input"
 1235  input="customerIDs.txt"; while read -r line; do awk ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
 1236  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' {print $9 $10 }' "CUSTOMERS/$line.txt"; done < "$input"
 1237  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { a[i++]=$9 / $10; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1238  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 + $line; else print a[x-1] + $line; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1239  script a3.txt
 1240  ls
 1241  nano customerMedians.txt
 1242  rm customerMedians.txt\
 1243  rm customerMedians.txt
 1244  rm c.txt
 1245  nano A.txt
 1246  script a3.txt
 1247  ls CUSTOMERS
 1248  rm -r CUSTOMERS
 1249  mkdir CUSTOMERS
 1250  touch customerIDs.txt
 1251  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
 1252  input="customerIDs.txt"; while read -r line; do awk -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1253  input="customerIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1254  script a3.txt
 1255  input="customerMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1256  nano customerMedians.txt
 1257  script a3.txt
 1258  nano customerMedians.txt
 1259  rm customerMedians.txt
 1260  script a3.txt
 1261  nano customerMedians.txt
 1262  rm customerMedians.txt
 1263  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +line; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
 1264  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + line; }' "CUSTOMERS/$line.txt"; done < "$input"
 1265  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 +'\t' +'line'; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1266  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2 "\t" line; else print a[x-1] +'\t' + 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1267  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", line; else print a[x-1], "\t", 'line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1268  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "$line"; else print a[x-1], "\t", "$line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1269  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", "line"; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1270  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", "line"; }' "CUSTOMERS/$line.txt"; done < "$input"
 1271  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1272  input="customerMedians.txt"; while read -r median id; do awk '{ if ($10!=0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1273  ls
 1274  script a3.txt
 1275  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1276  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1277  ls
 1278  ls CUSTOMERS
 1279  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt"; done < "$input"
 1280  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt"; done < "$input"
 1281  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8 + " " + $9 + " " + $10; }' "CUSTOMERS/$id.txt"; done < "$input"
 1282  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10; }' "CUSTOMERS/$id.txt"; done < "$input"
 1283  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median'; }' "CUSTOMERS/$id.txt"; done < "$input"
 1284  nano customerMedians.txt
 1285  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" > customerMedians.txt; done < "$input"
 1286  nano customerMedians.txt
 1287  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1288  nano customerMedians.txt
 1289  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1 + " " + $8; else print 0 + " " + $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1290  ls CUSTOMERS
 1291  rm -r CUSTOMERS/?.??????.BINARY.txt
 1292  ls CUSTOMERS
 1293  rm -r CUSTOMERS/?.?????.BINARY.txt
 1294  rm -r CUSTOMERS/?.????.BINARY.txt
 1295  rm -r CUSTOMERS/?.???.BINARY.txt
 1296  rm -r CUSTOMERS/?.??.BINARY.txt
 1297  rm -r CUSTOMERS/?.\?.BINARY.txt
 1298  rm -r CUSTOMERS/?.?.BINARY.txt
 1299  rm -r CUSTOMERS/?.BINARY.txt
 1300  ls CUSTOMERS
 1301  nano CUSTOMERS/49447323.BINARY.txt
 1302  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1303  nano CUSTOMERS/49447323.BINARY.txt
 1304  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';else print $8, " ", $9, " ", $10, " ",0, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1305  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1306  ls
 1307  nano customerMedians.txt
 1308  ls CUSTOMERS
 1309  nano CUSTOMERS/49447323.txt
 1310  awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/49447323.txt"
 1311  awk -F"\t" '{ if ($10 != 0) print $8, " ", $9, " ", $10, " ",$9/$10;}' "CUSTOMERS/49447323.txt"
 1312  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1313  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= $median) print $8, " ", $9, " ", $10, " ",$9/$10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1314  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1315  nano customerMedians.txt
 1316  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print median," ", id;}'; done < "$input"
 1317  input="customerMedians.txt"; while read -r median id; do awk '{ print median," ", id;}'; done < "$input"
 1318  input="customerMedians.txt"; while read median id; do awk '{ print median," ", id;}'; done < "$input"
 1319  input="customerMedians.txt"; while read median id; do echo "$median  $id"; done < "$input"
 1320  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median," ", $id;}'; done < "$input"
 1321  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1322  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", $id, " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1323  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", $median;}' "CUSTOMERS/$id.txt"; done < "$input"
 1324  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1325  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1326  ls
 1327  nano customerMedians.txt
 1328  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print "$median", "$id";}'; done < "$input"
 1329  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1330  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print '$median', $id;}'; done < "$input"
 1331  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1332  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, '$id';}'; done < "$input"
 1333  input="customerMedians.txt"; while read median id; do echo "$median   $id"; done < "$input"
 1334  input="customerMedians.txt"; while read median id; do awk -F"\t" -v '{ print median, 'id';}'; done < "$input"
 1335  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, 'id';}'; done < "$input"
 1336  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print median, id;}'; done < "$input"
 1337  ls
 1338  nano customerMedians.txt
 1339  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median, $id;}'; done < "$input"
 1340  printvar
 1341  printenv
 1342  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print $median}'; done < "$input"
 1343  input="customerMedians.txt"; while read median id; do awk -F"\t" '{ print '$median', '$id';}'; done < "$input"
 1344  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1345  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{ print '$median', '$id';}'; done < "$input"
 1346  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN = $median" "ID = $id" '{ print MEDIAN, ID;}'; done < "$input"
 1347  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print MEDIAN, ID;}'; done < "$input"
 1348  input="customerMedians.txt"; while read median id; do awk -F'\t' -v "MEDIAN=$median" "ID=$id" '{ print $8, " ", $9, " ", $10, " ", ID, " ", MEDIAN;}' "CUSTOMERS/ID.txt"; done < "$input"
 1349  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/ID.txt"; done < "$input"
 1350  input="customerMedians.txt"; while read median id; do awk -F'\t' '{ print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1351  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if ($10 != 0 && $9 / $10 >= $median) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1352  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1353  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1354  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,$median; if (($10 != 0) && (($9 / $10) >= $median)) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1355  input="customerMedians.txt"; while read -r median id; do awk -F'\t' '{  print $9,$10,'$median'; if (($10 != 0) && (($9 / $10) >= '$median')) print $8, " ", $9, " ", $10, " ", '$id', " ", '$median';}' "CUSTOMERS/$id.txt"; done < "$input"
 1356  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1357  ls CUSTOMERS
 1358  nano CUSTOMERS/49447323.BINARY.txt
 1359  for FILE in CUSTOMERS/*.BINARY.txt; do echo "$FILE"; datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1360  nano CUSTOMERS/53084107.BINARY.txt
 1361  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 | sed 's/$/ $FILE/' <  "$FILE" ; done
 1362  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" ; done
 1363  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ $FILE/'; done
 1364  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's/$/ "$FILE"/'; done
 1365  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s/\$/ $FILE/"; done
 1366  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed 's|$|$FILE|g'; done
 1367  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done
 1368  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -n; done
 1369  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -kn 1; done
 1370  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k 1nr; done
 1371  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -k -g 1nr; done
 1372  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1nr; done
 1373  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1nr; done
 1374  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1,1 nr; done
 1375  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k1,1nr; done
 1376  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1; done
 1377  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g; done
 1378  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done
 1379  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1,1; done
 1380  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g; done
 1381  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1.2; done
 1382  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1.3; done
 1383  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -g -k 1.1; done
 1384  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$|\t$FILE|g" | sort -g -k 1.1; done
 1385  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$|\t$FILE|g" | sort -g -k 1; done
 1386  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -t$'\t' -g -k 1; done
 1387  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s/$| $FILE/g" | sort -t$'\t' -g -k 1; done
 1388  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE/g" | sort -t$'\t' -g -k 1; done
 1389  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g" | sort -t$'\t' -g -k 1; done
 1390  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done > "customerCorrolations.txt"
 1391  sort -g -k 1 "customerCorrolations.txt"
 1392  sort -g -k -r 1 "customerCorrolations.txt"
 1393  sort -g -kr 1 "customerCorrolations.txt"
 1394  sort -g -r -k 1 "customerCorrolations.txt"
 1395  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1| sort -k 1 > "CUSTOMERS/highest.BINARYSORTED.txt"
 1396  awk'{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1397  ls
 1398  nano CUSTOMERS/highest.BINARYSORTED.txt
 1399  sort -g -r -k 1 "customerCorrolations.txt" > "customerCorrolations.txt"
 1400  nano customerCorolations.txt
 1401  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $FILE|g"; done > "customerCorrolations.txt"
 1402  sort -g -r -k 1 "customerCorrolations.txt"
 1403  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| ${FILE:10:8}|g"; done > "customerCorrolations.txt"
 1404  sort -g -r -k 1 "customerCorrolations.txt"
 1405  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1406  sort -g -r -k 1 "customerCorrolations.txt"
 1407  touch customerIDs.txt
 1408  cut -f 2 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > customerIDs.txt
 1409  input="customerIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$2 == ID' amazon_reviews_us_Books_v1_02.tsv > "CUSTOMERS/$line.txt"; done < "$input"
 1410  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1411  rm customerMedians.txt
 1412  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1413  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1414  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1415  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1416  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1417  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1418  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1419  touch productIDs.txt
 1420  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > productIDs.txt
 1421  input="productIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/$line.txt"; done < "$input"
 1422  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1423  input="productMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "PRODUCTS/$line.txt" > "PRODUCTS/$line.BINARY.txt"; done < "$input"
 1424  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1425  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1426  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1427  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1428  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1429  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1430  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1431  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1432  input="productMedians.txt"; while read -r median id; do awk '{ if ($1 < $median) print 0 + " " + $2; else print 1+ " " + $2; }' "PRODUCTS/$line.txt" > "PRODUCTS/$line.BINARY.txt"; done < "$input"
 1433  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1434  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1435  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1436  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1437  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1438  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1439  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1440  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1441  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt" > "PRODUCTS/$id.BINARY.txt"; done < "$input"
 1442  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1443  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1444  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1445  awk'{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1446  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1447  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1448  gnuplot
 1449  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/\<?\>//g;s/\<??\>//g' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1450  awk "$1 == 1" "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr " " "\n"  | uniq -c | sort -n | head -n 10 
 1451  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr " " "\n"  | uniq -c | sort -n | head -n 10 
 1452  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | uniq -c | sort -n | head -n 10 
 1453  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | uniq -c | sort -nk 1 | head -n 10 
 1454  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' output ; cat output | uniq -c | sort -nk 1 | head -n 10 
 1455  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n'
 1456  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n'| uniq -c 
 1457  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort | uniq -c | sort -nk 1 | head -n 10 
 1458  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nk 1 | head -n 10 
 1459  nano "043935806X.REVIEWSANDHELPFULNESS.txt"
 1460  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/\<.\> \?//g;s/\<..\> \?//g' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1461  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nk 1 | head -n 10 
 1462  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nk 1 
 1463  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c
 1464  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt"
 1465  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/\b\w\b \?//g; s/\b\w\w\b \?//g' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1466  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nk 1 | head -n 10 
 1467  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt"
 1468  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/\<?\>//g;s/\<??\>//g' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1469  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nk 1 | head -n 10 
 1470  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nkr 1 | head -n 10 
 1471  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10 
 1472  nano "043935806X.REVIEWSANDHELPFULNESS.txt"
 1473  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1474  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/^.$/d;s/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1475  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/^.$/d; s/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1476  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/^.$/d' | s'/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1477  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed 's/^.$/d' | sed 's/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1478  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed '/^.$/d' | sed '/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1479  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1480  nano "043935806X.REVIEWSANDHELPFULNESS.txt"
 1481  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n'
 1482  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed '/^$/d' | sed '/^.$/d' | sed '/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1483  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1484  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g'  | sed 's/<[^>]*>//g' | sed '/^$/d' | sed '/^.$/d' | sed '/^..$/d' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1485  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1486  nano "043935806X.REVIEWSANDHELPFULNESS.txt"
 1487  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1488  sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g' "043935806X.REVIEWSANDHELPFULNESS.txt"| sed 's/<[^>]*>//g' | sed 's/\<.\>//g;s/\<..\>//g'
 1489  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g' | sed 's/<[^>]*>//g' | sed 's/\<.\>//g;s/\<..\>//g' > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1490  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1491  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1492  sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g' "043935806X.REVIEWSANDHELPFULNESS.txt"| sed 's/<[^>]*>//g' | sed 's/\<.\>//g;s/\<..\>//g' | awk '$1 == 1' | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1493  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt"
 1494  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | tr ' ' '\n'
 1495  sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' "043935806X.REVIEWSANDHELPFULNESS.txt" | sed 's/<[^>]*>//g'  | awk '$1 == 1' | cut -f 2 | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1496  sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' "043935806X.REVIEWSANDHELPFULNESS.txt"
 1497  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | tr ' ' '\n' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1498  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1499  awk '$1 == 0' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1500  script a3.txt
 1501  rm customerMedians.txt
 1502  rm productMedians.txt
 1503  script a3.txt
 1504  ls
 1505  ls PRODUCTS
 1506  nano productMedians.txt
 1507  nano productIDs.txt
 1508  ls
 1509  rm customerMedians.txt
 1510  rm productMedians.txt
 1511  script a3.txt
 1512  nano productIDs.txt
 1513  ls PRODUCTS
 1514  rm -r PRODUCTS
 1515  mkdir PRODUCTS
 1516  touch productIDs.txt
 1517  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $4}' | head -n 100 > productIDs.txt
 1518  input="productIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/$line.txt"; done < "$input"
 1519  script a3.txt
 1520  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1521  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1522  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1523  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1524  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1525  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1526  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1527  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1528  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1529  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1530  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1531  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1532  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1533  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1534  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1535  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1536  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1537  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1538  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1539  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1540  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1541  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1542  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1543  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1544  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1545  input="customerIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "CUSTOMERS/$line.txt" >> customerMedians.txt; done < "$input"
 1546  input="customerMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "CUSTOMERS/$id.txt" > "CUSTOMERS/$id.BINARY.txt"; done < "$input"
 1547  for FILE in CUSTOMERS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "customerCorrolations.txt"
 1548  sort -g -r -k 1 "customerCorrolations.txt" | head -n 1
 1549  sort -k 1 "CUSTOMERS/51065232.BINARY.txt"> "CUSTOMERS/highest.BINARYSORTED.txt"
 1550  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1551  awk '{print NR, $1}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1552  input="productIDs.txt"; while read -r line; do awk -F'\t' -v "ID=$line" '{ if($10 != 0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", ID; else print a[x-1], "\t", ID; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1553  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt" > "PRODUCTS/$id.BINARY.txt"; done < "$input"
 1554  for FILE in PRODUCTS/*.BINARY.txt; do datamash-1.3/datamash  -W ppearson 1:2 <  "$FILE" | sed "s|$| $(echo $FILE | tr -cd '[[:digit:]]')|g"; done > "productCorrolations.txt"
 1555  sort -g -r -k 1 "productCorrolations.txt" | head -n 1
 1556  sort -k 1 "PRODUCTS/0525947647.BINARY.txt"> "PRODUCTS/highest.BINARYSORTED.txt"
 1557  awk '{print NR, $1}' "PRODUCTS/highest.BINARYSORTED.txt" > "PRODUCTS/highest.BINARYSORTEDRATINGS.txt"
 1558  awk '{print NR, $1}' "PRODUCTS/highest.BINARYSORTED.txt" > "PRODUCTS/highest.BINARYSORTEDHELPFULNESS.txt"
 1559  awk -v "ID=043935806X" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv | cut -f 9,14 > "043935806X.REVIEWSANDHELPFULNESS.txt"
 1560  awk '$1 == 1' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1561  awk '$1 == 0' "043935806X.REVIEWSANDHELPFULNESS.txt" | cut -f 2 | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1562  history > cmds.log
 1563  ls
 1564  rm customerMedians.txt
 1565  rm productMedians.txt
 1566  script a3.txt
 1567  nano productIDS.txt
 1568  ls
 1569  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100 > productIDs.txt
 1570  nano productIDS.txt
 1571  cut -f 4 amazon_reviews_us_Books_v1_02.tsv | sort -n | uniq -c | sort -nr | awk '{print $2}' | head -n 100
 1572  nano productIDs.txt
 1573  script a3.txt
 1574  ls
 1575  rm customerCorrolations.txt
 1576  rm productCorrolations.txt
 1577  script a3.txt
 1578  ls PRODUCTS
 1579  ls
 1580  ls PRODUCTS
 1581  input="productIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/$line.txt"; done < "$input"
 1582  ls PRODUCTS
 1583  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1584  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt" > "PRODUCTS/$id.BINARY.txt"; done < "$input"
 1585  nano productMedians.txt
 1586  nano productIDs.txt
 1587  nano customerMedians.txt
 1588  ls PRODUCTS
 1589  nano PRODUCTS/0451524934.txt~
 1590  nano PRODUCTS/0439784549.txt
 1591  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt" > "PRODUCTS/$id.BINARY.txt"; done < "$input"
 1592  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1593  nano productMedians.txt
 1594  ls
 1595  ls PRODUCTS
 1596  nano PRODUCTS/038529929X.txt
 1597  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt"; done < "$input"
 1598  nano productMedians.txt
 1599  0.75     77299496
 1600  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", '$line'; else print a[x-1], "\t", '$line'; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1601  0.75     77299496
 1602  nano productMedians.txt
 1603  nano productIDs.txt
 1604  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { print '$line'; }'; done < "$input"
 1605  nano productIDs.txt
 1606  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { print "$line"; }'; done < "$input"
 1607  nano customerMedians.txt
 1608  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { print '$line'; }'; done < "$input"
 1609  input="productIDs.txt"; while read -r line; do awk -F"\t" '{ print '$line'; }'; done < "$input"
 1610  input="productIDs.txt"; while read -r line; do awk -F"\t" '{ print '$0'; }'; done < "$input"
 1611  input="productIDs.txt"; while read -r line; do awk -F"\t" '{ print $0; }'; done < "$input"
 1612  input="productIDs.txt"; while read -r line; do awk -F"\t" '{ print $line; }'; done < "$input"
 1613  rm productMedians.txt
 1614  input="productIDs.txt"; while read -r line; do awk -F"\t" ' { if($10 !=0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", $line; else print a[x-1], "\t", $line; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1615  input="productMedians.txt"; while read -r median id; do awk -F"\t" '{ if ($10 != 0 && ($9 / $10) >= '$median') print 1," ", $8; else print 0, " ", $8; }' "PRODUCTS/$id.txt" > "PRODUCTS/$id.BINARY.txt"; done < "$input"
 1616  ls
 1617  ls PRODUCTS
 1618  nano productMedians.txt
 1619  rm productMedians.txt
 1620  rm -r PRODUCTS
 1621  mkdir PRODUCTS
 1622  nano productIDs.txt
 1623  input="productIDs.txt"; while read -r line; do awk  -F"\t" -v "ID=$line" '$4 == ID' amazon_reviews_us_Books_v1_02.tsv > "PRODUCTS/$line.txt"; done < "$input"
 1624  input="productIDs.txt"; while read -r line; do awk -F'\t' -v "ID=$line" '{ if($10 != 0) a[i++]=$9 / $10; else a[i++]=0; } END { x=int((i+1)/2); if (x < (i+1)/2) print (a[x-1]+a[x])/2, "\t", ID; else print a[x-1], "\t", ID; }' "PRODUCTS/$line.txt" >> productMedians.txt; done < "$input"
 1625  nano productMedians.txt
 1626  script a3.txt
 1627  git init
 1628  git add a3.txt cmds.log "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt" "CUSTOMERS/highest.BINARYSORTEDHELPFULNESS.txt"
 1629  git add  "PRODUCTS/highest.BINARYSORTEDRATINGS.txt"  "PRODUCTS/highest.BINARYSORTEDHELPFULNESS.txt"
 1630  git commit -m "Committing assignment 3 console output and command logs, and the data for plotting top customer and product rating and helpfulness data"
 1631  git remote add origin https://github.com/evrenke/CS185Assignment3.git
 1632  git remote set_url origin https://github.com/evrenke/CS185Assignment3.git
 1633  git remote set-url origin https://github.com/evrenke/CS185Assignment3.git
 1634  git push -u origin master
 1635  exit
 1636  gnuplot
 1637  apt install gnuplot-qt   # version 5.2.8+dfsg1-2
 1638  wget http://ftp.cstug.cz/pub/CTAN/graphics/gnuplot/5.2.6/gnuplot-5.2.6.tar.gz
 1639   gunzip gnuplot-5.2.6.tar.gz 
 1640   gzip -d gnuplot-5.2.6.tar.gz 
 1641  gzip -d gnuplot-5.2.6.tar.gz 
 1642  ls
 1643  gzip -d gnuplot-5.2.6.tar.gz
 1644  tar xvf gnuplot-5.2.6.tar
 1645  ls
 1646   cd gnuplot-5.2.6/
 1647  cd gnuplot-5.2.6/
 1648  ./configure
 1649  make
 1650  make check
 1651  ./src/gnuplot
 1652  cd
 1653  exit
 1654  nano "CUSTOMERS/51065232.BINARY.txt"
 1655  nano  "CUSTOMERS/highest.BINARYSORTED.txt"
 1656  awk '{print NR, $2}' "PRODUCTS/highest.BINARYSORTED.txt" > "PRODUCTS/highest.BINARYSORTEDRATINGS.txt"
 1657  awk '{print NR, $2}' "CUSTOMERS/highest.BINARYSORTED.txt" > "CUSTOMERS/highest.BINARYSORTEDRATINGS.txt"
 1658  git init
 1659  git reset
 1660  git add CUSTOMERS/highest.BINARYSORTEDRATINGS.txt PRODUCTS/highest.BINARYSORTEDRATINGS.txt
 1661  git commit -m "Corrected ratings list for top customer and product"
 1662  git push -u origin master
 1663  git pull
 1664  git commit -m "Corrected ratings list for top customer and product"
 1665  git add CUSTOMERS/highest.BINARYSORTEDRATINGS.txt PRODUCTS/highest.BINARYSORTEDRATINGS.txt
 1666  git commit -m "Corrected ratings list for top customer and product"
 1667  git push -u origin master
 1668  exit
 1669  ls
 1670  nano amazon_reviews_us_Books_v1_02.tsv
 1671  script ws8.txt
 1672  awk -F '\t' '$12 == Y' > verified.txt
 1673  awk -F '\t' "$12 == Y" > verified.txt
 1674  awk -F"\t" -v "ID=Y" '$12 == ID' amazon_reviews_us_Books_v1_02.tsv > verified.txt
 1675  awk -F"\t" -v "ID=N" '$12 == ID' amazon_reviews_us_Books_v1_02.tsv > unverified.txt
 1676  cut -f 14 verified.txt | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1677  cut -f 14 unverified.txt | sed 's/,//g;s/\.//g;s/\;//g;s/\<and\>//g;s/\<or\>//g;s/\<if\>//g;s/\<in\>//g;s/\<it\>//g;s/\<.\>//g;s/\<..\>//g' | sed 's/<[^>]*>//g' | sed -E -e 's/[[:blank:]]+/\n/g' | sort -r | uniq -c | sort -nrk 1 | head -n 10
 1678  history > cmds.log
